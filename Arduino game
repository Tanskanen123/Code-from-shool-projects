//Tämä koodi tehtiin pientä peliä varten Arduinolle.
//Kytketty näyttö esittäisi luvun, ja pelaaja painaisi
//kyseistä lukua kytketyllä näpäimistöllä. Peli jatkuu
//kunnes pelaaja tekee virheen.


//This code was made for a little game on Arduino. 
//A display connected to Arduino would show a number, 
//then the player would press the corresponding number 
//on a keypad connected to Arduino. The game would continue
//until the player made a mistake.

#include <LiquidCrystal.h>
#include <Keypad.h>
#include <avr/wdt.h>
#include <EEPROM.h>

// Alustetaan näyttö
LiquidCrystal lcd(7, 6, 5, 4, 2, 3);

//Alustetaan näppäimistö
const byte ROWS = 4; 
const byte COLS = 4; 
char hexaKeys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = {8, 9, 19, 18}; 
byte colPins[COLS] = {17, 16, 15, 14}; 

Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS); 

volatile int luku;
unsigned long aika_nyt = 0;
//Odotus on se aika joka käyttäjällä on painaa oikeaa nappia
int odotus = 1000;

//tX on timerCounterX käyttämä muuttuja
volatile int t1 = 0;
volatile int t2 = 0;

//oikein laskee pisteitä
volatile int oikein = 0;

//paras on paras tulos
int paras = 0;

//yritys estää painamasta nappia kahteen kertaan. Pitää odottaa luvun vaihtumista, ennen napin painoa uudestaan
int yritys = 0;

void setup(){
  //Luetaan EEPROM:ilta paras tulos 
  paras = EEPROM.read(0);

  //Ajastin 1
  TCCR1A = 0;
  TCCR1B = 0;
  TCNT1 = 0;   
  //Määritetään ajastimen nopeus 1Hz = 1s
  OCR1A = 15624; //Tällä määritetään nopeus
  TCCR1B = (1 << WGM12) | (1 << CS12) | (1 << CS10) ; //prescaler 1024 + CTC päälle
  TIMSK1 |= (1 << OCIE1A);

   //Ajastin 2
  TCCR2A = 0;
  TCCR2B = 0;
  TCNT2 = 0;   
  //Määritetään ajastimen nopeus 1kHz = 0,001s
  OCR2A = 249; //Tällä määritetään nopeus
  TCCR2A = (1 << WGM21); //CTC päälle
  TCCR2B = (1 << CS22); //prescaler 64
  TIMSK2 |= (1 << OCIE2A);

  //Alustetaan LCD
  lcd.begin(16, 2);

  //Paras tulos
  lcd.setCursor(4, 0);
  lcd.print("Paras  :" );
  lcd.setCursor(13, 0);
  lcd.print(paras);

  //Pinnit D10 ja D12 on nyt OUTPUT
  DDRB |= B00010100;

  //Watchdog ajastin 8s
  wdt_enable(WDTO_8S);
}

//Timer 1 funktio
ISR(TIMER1_COMPA_vect){
 t1 = t1 + 1;
 
  //1s välein näytölle tulee uusi luku
if(t1 == 1){
   //Laitetaan osoitin näytöllä alkuun
  lcd.setCursor(0, 0);
  //Luodaan luku ja tuodaan se näytölle
  luku = random(10);
  lcd.print(luku);
  //Nollataan ajastin nollaamalla t1
  t1 = 0;}
    }
    
//Timer 2 funktio
ISR(TIMER2_COMPA_vect){
  t2 = t2 + 1;

  //1s välein sammutetaan ledit
  //t2 == 1000, koska timer2 on 8bit
  if(t2 == 1000){
  PORTB = B00000000;
  t2 = 0;}
  }

void tulostaPisteet(){
  //Tulostetaan pisteet
  lcd.setCursor(4, 1);
  lcd.print("Pisteet:" );
  lcd.setCursor(13, 1);
  lcd.print(oikein);
  }
  
void loop(){
  //Päivitetään ennätystä jos tarvitaan + nollataan yritys
  if(oikein == paras){lcd.setCursor(13, 0); lcd.print(paras);}
  tulostaPisteet();
  yritys = 0;
  
  //Nyt kun luku on tulostettu suoritetaan seuraavaa toimintoa 
  //Toiminto loppuu kun aika loppuu
  lcd.setCursor(0,1);
  aika_nyt = millis();
  
  while(millis() < aika_nyt + odotus){

  //Jos nappia painetaan, katsotaan oliko se oikea vai väärä
  char customKey = customKeypad.getKey();
  if(customKey){
    if(yritys == 0){
    int x = customKey - 48;
    if(x == luku){PORTB |= B00000100; oikein = oikein +1;}
    if(x != luku){PORTB |= B00010000; oikein = 0; lcd.setCursor(14,1); lcd.print("  ");}
    yritys = 1;
    }
  }
    }
    if(oikein > paras){EEPROM.write(0, oikein); paras = oikein;}
    wdt_reset();
}
